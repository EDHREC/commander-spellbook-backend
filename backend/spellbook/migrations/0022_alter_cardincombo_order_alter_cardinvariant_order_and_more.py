# Generated by Django 5.0.6 on 2024-05-20 20:36

from django.db import migrations, models


def set_order(apps, schema_editor):
    Combo = apps.get_model('spellbook', 'Combo')
    save = []
    for combo in Combo.objects.prefetch_related('cardincombo_set').only('id'):
        for i, card in enumerate(combo.cardincombo_set.all()):
            card.order = i
            card.pre_save = lambda: None
            save.append(card)
    CardInCombo = apps.get_model('spellbook', 'CardInCombo')
    CardInCombo.objects.bulk_update(save, ['order'])
    save.clear()
    for combo in Combo.objects.prefetch_related('templateincombo_set').only('id'):
        for i, template in enumerate(combo.templateincombo_set.all()):
            template.order = i
            template.pre_save = lambda: None
            save.append(template)
    TemplateInCombo = apps.get_model('spellbook', 'TemplateInCombo')
    TemplateInCombo.objects.bulk_update(save, ['order'])
    save.clear()
    Variant = apps.get_model('spellbook', 'Variant')
    for variant in Variant.objects.prefetch_related('cardinvariant_set').only('id'):
        for i, card in enumerate(variant.cardinvariant_set.all()):
            card.order = i
            card.pre_save = lambda: None
            save.append(card)
    CardInvariant = apps.get_model('spellbook', 'CardInvariant')
    CardInvariant.objects.bulk_update(save, ['order'])
    save.clear()
    for variant in Variant.objects.prefetch_related('templateinvariant_set').only('id'):
        for i, template in enumerate(variant.templateinvariant_set.all()):
            template.order = i
            template.pre_save = lambda: None
            save.append(template)
    TemplateInvariant = apps.get_model('spellbook', 'TemplateInvariant')
    TemplateInvariant.objects.bulk_update(save, ['order'])
    save.clear()
    VariantSuggestion = apps.get_model('spellbook', 'VariantSuggestion')
    for variant_suggestion in VariantSuggestion.objects.prefetch_related('uses').only('id'):
        for i, card in enumerate(variant_suggestion.uses.all()):
            card.order = i
            card.pre_save = lambda: None
            save.append(card)
    CardUsedInVariantSuggestion = apps.get_model('spellbook', 'CardUsedInVariantSuggestion')
    CardUsedInVariantSuggestion.objects.bulk_update(save, ['order'])
    save.clear()
    for variant_suggestion in VariantSuggestion.objects.prefetch_related('requires').only('id'):
        for i, template in enumerate(variant_suggestion.requires.all()):
            template.order = i
            template.pre_save = lambda: None
            save.append(template)
    TemplateRequiredInvariantSuggestion = apps.get_model('spellbook', 'TemplateRequiredInvariantSuggestion')
    TemplateRequiredInvariantSuggestion.objects.bulk_update(save, ['order'])


class Migration(migrations.Migration):

    dependencies = [
        ('spellbook', '0021_add_quantity_field_in_alchemy'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cardincombo',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Order of the card in the combo.', verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='cardinvariant',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Order of the card in the combo.', verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='cardusedinvariantsuggestion',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Order of the card in the combo.', verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='templateincombo',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Order of the card in the combo.', verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='templateinvariant',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Order of the card in the combo.', verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='templaterequiredinvariantsuggestion',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0, help_text='Order of the card in the combo.', verbose_name='order'),
        ),
        migrations.RunPython(
            code=set_order,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
