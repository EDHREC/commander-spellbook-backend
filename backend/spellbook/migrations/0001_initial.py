# Generated by Django 4.0.5 on 2022-07-04 10:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Card name', max_length=255, unique=True)),
                ('oracle_id', models.UUIDField(blank=True, help_text='Scryfall Oracle ID', unique=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'card',
                'verbose_name_plural': 'cards',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prerequisites', models.TextField(blank=True, help_text='Setup instructions for this combo')),
                ('description', models.TextField(blank=True, help_text='Long description of the combo, in steps')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('includes', models.ManyToManyField(blank=True, help_text='Cards that this combo includes', related_name='included_in_combos', to='spellbook.card', verbose_name='included cards')),
            ],
            options={
                'verbose_name': 'combo',
                'verbose_name_plural': 'combos',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short name for a produced effect', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Long description of a produced effect')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'feature',
                'verbose_name_plural': 'features',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NW', 'Not Working'), ('D', 'Draft'), ('OK', 'Ok')], default='D', help_text='Variant status for editors', max_length=2)),
                ('prerequisites', models.TextField(blank=True, help_text='Setup instructions for this variant')),
                ('description', models.TextField(blank=True, help_text='Long description of the variant, in steps')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unique_id', models.CharField(editable=False, help_text='Unique ID for this variant', max_length=128, unique=True)),
                ('includes', models.ManyToManyField(editable=False, help_text='Cards that this variant includes', related_name='included_in_variants', to='spellbook.card')),
                ('of', models.ManyToManyField(editable=False, help_text='Combo that this variant is an instance of', related_name='variants', to='spellbook.combo')),
                ('produces', models.ManyToManyField(editable=False, help_text='Features that this variant produces', related_name='produced_by_variants', to='spellbook.feature')),
            ],
            options={
                'verbose_name': 'variant',
                'verbose_name_plural': 'variants',
                'ordering': ['-status', '-created'],
            },
        ),
        migrations.AddField(
            model_name='combo',
            name='needs',
            field=models.ManyToManyField(blank=True, help_text='Features that this combo needs', related_name='needed_by_combos', to='spellbook.feature', verbose_name='needed features'),
        ),
        migrations.AddField(
            model_name='combo',
            name='produces',
            field=models.ManyToManyField(help_text='Features that this combo produces', related_name='produced_by_combos', to='spellbook.feature', verbose_name='produced features'),
        ),
        migrations.AddField(
            model_name='card',
            name='features',
            field=models.ManyToManyField(blank=True, help_text='Features provided by this single card effects or characteristics', related_name='cards', to='spellbook.feature'),
        ),
        migrations.AddIndex(
            model_name='variant',
            index=models.Index(fields=['unique_id'], name='unique_variant_index'),
        ),
    ]
