openapi: 3.0.3
info:
  title: Commander Spellbook API
  version: dev
  description: 'API for Commander Spellbook, the combo database engine for Magic:
    The Gathering'
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /{format}:
    get:
      operationId: root_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /card-list-from-url:
    get:
      operationId: card_list_from_url_retrieve
      parameters:
      - in: query
        name: url
        schema:
          type: string
      tags:
      - card-list-from-url
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deck'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: ''
  /cards/:
    get:
      operationId: cards_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: q
        required: false
        in: query
        description: A search query.
        schema:
          type: string
      tags:
      - cards
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCardDetailList'
          description: ''
  /cards/{id}/:
    get:
      operationId: cards_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card.
        required: true
      tags:
      - cards
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDetail'
          description: ''
  /features/:
    get:
      operationId: features_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: q
        required: false
        in: query
        description: A search query.
        schema:
          type: string
      tags:
      - features
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureList'
          description: ''
  /features/{id}/:
    get:
      operationId: features_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feature.
        required: true
      tags:
      - features
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /find-my-combos:
    get:
      operationId: find_my_combos_retrieve
      tags:
      - find-my-combos
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: find_my_combos_create
      tags:
      - find-my-combos
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /properties/:
    get:
      operationId: properties_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - properties
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebsitePropertyList'
          description: ''
  /properties/{key}/:
    get:
      operationId: properties_retrieve
      parameters:
      - in: path
        name: key
        schema:
          type: string
        description: A unique value identifying this Website Property.
        required: true
      tags:
      - properties
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsiteProperty'
          description: ''
  /templates/:
    get:
      operationId: templates_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: q
        required: false
        in: query
        description: A search query.
        schema:
          type: string
      tags:
      - templates
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTemplateList'
          description: ''
  /templates/{id}/:
    get:
      operationId: templates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this card template.
        required: true
      tags:
      - templates
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
  /token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /users/:
    get:
      operationId: users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDetailList'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /variant-aliases/:
    get:
      operationId: variant_aliases_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - variant-aliases
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVariantAliasList'
          description: ''
  /variant-aliases/{id}/:
    get:
      operationId: variant_aliases_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique id of this variant alias
        required: true
      tags:
      - variant-aliases
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantAlias'
          description: ''
  /variant-suggestions/:
    get:
      operationId: variant_suggestions_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: suggested_by
        schema:
          type: integer
      tags:
      - variant-suggestions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVariantSuggestionList'
          description: ''
    post:
      operationId: variant_suggestions_create
      tags:
      - variant-suggestions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VariantSuggestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VariantSuggestion'
          application/json:
            schema:
              $ref: '#/components/schemas/VariantSuggestion'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantSuggestion'
          description: ''
  /variant-suggestions/{id}/:
    get:
      operationId: variant_suggestions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant suggestion.
        required: true
      tags:
      - variant-suggestions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantSuggestion'
          description: ''
    put:
      operationId: variant_suggestions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant suggestion.
        required: true
      tags:
      - variant-suggestions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VariantSuggestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VariantSuggestion'
          application/json:
            schema:
              $ref: '#/components/schemas/VariantSuggestion'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantSuggestion'
          description: ''
    patch:
      operationId: variant_suggestions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant suggestion.
        required: true
      tags:
      - variant-suggestions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVariantSuggestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVariantSuggestion'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVariantSuggestion'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantSuggestion'
          description: ''
    delete:
      operationId: variant_suggestions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this variant suggestion.
        required: true
      tags:
      - variant-suggestions
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /variants/:
    get:
      operationId: variants_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: q
        required: false
        in: query
        description: A search query.
        schema:
          type: string
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVariantList'
          description: ''
  /variants/{id}/:
    get:
      operationId: variants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          description: Unique ID for this variant
        required: true
      tags:
      - variants
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
          description: ''
components:
  schemas:
    Card:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of card
          maxLength: 255
        oracle_id:
          type: string
          format: uuid
          nullable: true
          title: Scryfall Oracle ID of card
        spoiler:
          type: boolean
          title: Is spoiler
          description: Is this from an upcoming set?
      required:
      - id
      - name
    CardDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of card
          maxLength: 255
        oracle_id:
          type: string
          format: uuid
          nullable: true
          title: Scryfall Oracle ID of card
        identity:
          allOf:
          - $ref: '#/components/schemas/IdentityEnum'
          title: Color identity
        spoiler:
          type: boolean
          title: Is spoiler
          description: Is this from an upcoming set?
        type_line:
          type: string
          title: Type line of card
          maxLength: 255
        oracle_text:
          type: string
          title: Oracle text of card
        keywords:
          title: Oracle keywords of card
        mana_value:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Mana value of card
        reserved:
          type: boolean
          title: Reserved list card
          description: Whether this card is part of the Reserved List
        latest_printing_set:
          type: string
          title: Latest printing set of card
          description: Set code of latest printing of card
          maxLength: 10
        reprinted:
          type: boolean
          title: Reprinted card
          description: Whether this card has been reprinted
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureOfCard'
          readOnly: true
        legalities:
          allOf:
          - $ref: '#/components/schemas/CardLegalities'
          readOnly: true
        prices:
          allOf:
          - $ref: '#/components/schemas/CardPrices'
          readOnly: true
      required:
      - features
      - id
      - legalities
      - name
      - prices
    CardInVariant:
      type: object
      properties:
        card:
          allOf:
          - $ref: '#/components/schemas/Card'
          readOnly: true
        zone_locations:
          type: array
          items:
            type: string
          readOnly: true
        battlefield_card_state:
          type: string
          readOnly: true
        exile_card_state:
          type: string
          readOnly: true
        library_card_state:
          type: string
          readOnly: true
        graveyard_card_state:
          type: string
          readOnly: true
        must_be_commander:
          type: boolean
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Quantity of the card in the combo.
      required:
      - battlefield_card_state
      - card
      - exile_card_state
      - graveyard_card_state
      - library_card_state
      - must_be_commander
      - zone_locations
    CardLegalities:
      type: object
      properties:
        commander:
          type: boolean
        pauper_commander_main:
          type: boolean
        pauper_commander:
          type: boolean
        oathbreaker:
          type: boolean
        predh:
          type: boolean
        brawl:
          type: boolean
        vintage:
          type: boolean
        legacy:
          type: boolean
        modern:
          type: boolean
        pioneer:
          type: boolean
        standard:
          type: boolean
        pauper:
          type: boolean
      required:
      - brawl
      - commander
      - legacy
      - modern
      - oathbreaker
      - pauper
      - pauper_commander
      - pauper_commander_main
      - pioneer
      - predh
      - standard
      - vintage
    CardPrices:
      type: object
      properties:
        tcgplayer:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cardkingdom:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cardmarket:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - cardkingdom
      - cardmarket
      - tcgplayer
    CardUsedInVariantSuggestion:
      type: object
      properties:
        card:
          type: string
          title: Card name
          description: Card name
          pattern: '[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{2,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)'
          maxLength: 255
        zone_locations:
          type: array
          items:
            $ref: '#/components/schemas/ZoneLocationsEnum'
        battlefield_card_state:
          type: string
          title: Battlefield starting card state
          description: State of the card on the battlefield, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        exile_card_state:
          type: string
          title: Exile starting card state
          description: State of the card in exile, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        library_card_state:
          type: string
          title: Library starting card state
          description: State of the card in the library, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        graveyard_card_state:
          type: string
          title: Graveyard starting card state
          description: State of the card in the graveyard, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        must_be_commander:
          type: boolean
          description: Does the card have to be a commander?
      required:
      - card
      - zone_locations
    Combo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
    Deck:
      type: object
      properties:
        main:
          type: array
          items:
            type: string
        commanders:
          type: array
          items:
            type: string
      required:
      - commanders
      - main
    Feature:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Name of feature
          description: Short name for a produced effect
          pattern: ^[A-Z]
          maxLength: 255
        uncountable:
          type: boolean
          title: Is uncountable
          description: Is this an uncountable feature? Uncountable features can only
            appear in one copy and speed up variant generation.
      required:
      - id
      - name
    FeatureOfCard:
      type: object
      properties:
        feature:
          allOf:
          - $ref: '#/components/schemas/Feature'
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Quantity of the card in the combo.
        zone_locations:
          type: array
          items:
            type: string
          readOnly: true
        battlefield_card_state:
          type: string
          title: Battlefield starting card state
          description: State of the card on the battlefield, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        exile_card_state:
          type: string
          title: Exile starting card state
          description: State of the card in exile, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        library_card_state:
          type: string
          title: Library starting card state
          description: State of the card in the library, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        graveyard_card_state:
          type: string
          title: Graveyard starting card state
          description: State of the card in the graveyard, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        must_be_commander:
          type: boolean
          description: Does the card have to be a commander?
      required:
      - feature
      - zone_locations
    FeatureProducedByVariant:
      type: object
      properties:
        feature:
          allOf:
          - $ref: '#/components/schemas/Feature'
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Quantity of the feature produced by the variant.
      required:
      - feature
    FeatureProducedInVariantSuggestion:
      type: object
      properties:
        feature:
          type: string
          title: Feature name
          description: Feature name
          pattern: ^[A-Z]
          maxLength: 255
      required:
      - feature
    IdentityEnum:
      enum:
      - C
      - W
      - U
      - B
      - R
      - G
      - WU
      - WB
      - RW
      - GW
      - UB
      - UR
      - GU
      - BR
      - BG
      - RG
      - WUB
      - URW
      - GWU
      - RWB
      - WBG
      - RGW
      - UBR
      - BGU
      - GUR
      - BRG
      - WUBR
      - UBRG
      - BRGW
      - RGWU
      - GWUB
      - WUBRG
      type: string
      description: |-
        * `C` - C
        * `W` - W
        * `U` - U
        * `B` - B
        * `R` - R
        * `G` - G
        * `WU` - WU
        * `WB` - WB
        * `RW` - RW
        * `GW` - GW
        * `UB` - UB
        * `UR` - UR
        * `GU` - GU
        * `BR` - BR
        * `BG` - BG
        * `RG` - RG
        * `WUB` - WUB
        * `URW` - URW
        * `GWU` - GWU
        * `RWB` - RWB
        * `WBG` - WBG
        * `RGW` - RGW
        * `UBR` - UBR
        * `BGU` - BGU
        * `GUR` - GUR
        * `BRG` - BRG
        * `WUBR` - WUBR
        * `UBRG` - UBRG
        * `BRGW` - BRGW
        * `RGWU` - RGWU
        * `GWUB` - GWUB
        * `WUBRG` - WUBRG
    PaginatedCardDetailList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CardDetail'
    PaginatedFeatureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    PaginatedTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    PaginatedUserDetailList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDetail'
    PaginatedVariantAliasList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VariantAlias'
    PaginatedVariantList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
    PaginatedVariantSuggestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VariantSuggestion'
    PaginatedWebsitePropertyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WebsiteProperty'
    PatchedUserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    PatchedVariantSuggestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/VariantSuggestionStatusEnum'
          readOnly: true
          description: |-
            Suggestion status for editors

            * `N` - New
            * `NR` - Needs Review
            * `A` - Accepted
            * `R` - Rejected
        notes:
          type: string
          description: Notes written by editors
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
        uses:
          type: array
          items:
            $ref: '#/components/schemas/CardUsedInVariantSuggestion'
        requires:
          type: array
          items:
            $ref: '#/components/schemas/TemplateRequiredInVariantSuggestion'
        produces:
          type: array
          items:
            $ref: '#/components/schemas/FeatureProducedInVariantSuggestion'
        mana_needed:
          type: string
          description: Mana needed for this combo. Use the {1}{W}{U}{B}{R}{G}{B/P}...
            format.
          pattern: ^(?:(?:\{(?:C\/[WUBRG]|[WUBRG](?:\/P)?|[0-9CPXYZS\u221e]|[1-9][0-9]{1,2}|(?:2\/[WUBRG]|W\/U|W\/B|U\/B|U\/R|B\/R|B\/G|R\/G|R\/W|G\/W|G\/U)(?:\/P)?)\})[^\{\}\[\]]*)*$
          maxLength: 512
        other_prerequisites:
          type: string
          description: Other prerequisites for this combo.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
        description:
          type: string
          description: Long description, in steps
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
        spoiler:
          type: boolean
          title: Is spoiler
          description: Is this combo a spoiler?
        comment:
          type: string
          description: Comment written by the user that suggested this combo
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 1024
        suggested_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
    Template:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Template name
          description: short description of the template in natural language
          pattern: ^[A-Z]
          maxLength: 255
        scryfall_query:
          type: string
          description: |
            Variables supported: mv, manavalue, power, pow, toughness, tou, pt, powtou, loyalty, loy, c, color, id, identity, produces, has, t, type, keyword, kw, is, o, oracle, function, otag, oracletag, oracleid, m, mana, devotion.
            Operators supported: =, !=, <, >, <=, >=, :.
            You can compose a "and"/"or" expression made of "and"/"or" expressions, like "(c:W or c:U) and (t:creature or t:artifact)".
            You can also omit parentheses when not necessary, like "(c:W or c:U) t:creature".
            Card names are only supported if wrapped in double quotes and preceded by an exclamation mark (!) in order to match the exact name, like !"Lightning Bolt".
            You can negate any expression by prepending a dash (-), like "-t:creature".
            More info at: https://scryfall.com/docs/syntax.
          maxLength: 1024
        scryfall_api:
          type: string
          readOnly: true
      required:
      - id
      - name
      - scryfall_api
      - scryfall_query
    TemplateInVariant:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Template'
          readOnly: true
        zone_locations:
          type: array
          items:
            type: string
          readOnly: true
        battlefield_card_state:
          type: string
          readOnly: true
        exile_card_state:
          type: string
          readOnly: true
        library_card_state:
          type: string
          readOnly: true
        graveyard_card_state:
          type: string
          readOnly: true
        must_be_commander:
          type: boolean
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Quantity of the card in the combo.
      required:
      - battlefield_card_state
      - exile_card_state
      - graveyard_card_state
      - library_card_state
      - must_be_commander
      - template
      - zone_locations
    TemplateRequiredInVariantSuggestion:
      type: object
      properties:
        template:
          type: string
          title: Template name
          description: Template name
          pattern: ^[A-Z]
          maxLength: 255
        scryfall_query:
          type: string
          nullable: true
          description: |
            Variables supported: mv, manavalue, power, pow, toughness, tou, pt, powtou, loyalty, loy, c, color, id, identity, produces, has, t, type, keyword, kw, is, o, oracle, function, otag, oracletag, oracleid, m, mana, devotion.
            Operators supported: =, !=, <, >, <=, >=, :.
            You can compose a "and"/"or" expression made of "and"/"or" expressions, like "(c:W or c:U) and (t:creature or t:artifact)".
            You can also omit parentheses when not necessary, like "(c:W or c:U) t:creature".
            Card names are only supported if wrapped in double quotes and preceded by an exclamation mark (!) in order to match the exact name, like !"Lightning Bolt".
            You can negate any expression by prepending a dash (-), like "-t:creature".
            More info at: https://scryfall.com/docs/syntax.
          maxLength: 1024
        zone_locations:
          type: array
          items:
            $ref: '#/components/schemas/ZoneLocationsEnum'
        battlefield_card_state:
          type: string
          title: Battlefield starting card state
          description: State of the card on the battlefield, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        exile_card_state:
          type: string
          title: Exile starting card state
          description: State of the card in exile, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        library_card_state:
          type: string
          title: Library starting card state
          description: State of the card in the library, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        graveyard_card_state:
          type: string
          title: Graveyard starting card state
          description: State of the card in the graveyard, if present.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 512
        must_be_commander:
          type: boolean
          description: Does the card have to be a commander?
      required:
      - template
      - zone_locations
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - id
      - username
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - id
      - is_active
      - is_staff
      - password
      - username
    Variant:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for this variant
          maxLength: 128
        status:
          allOf:
          - $ref: '#/components/schemas/VariantStatusEnum'
          description: |-
            Variant status for editors

            * `N` - New
            * `D` - Draft
            * `NR` - Needs Review
            * `OK` - Ok
            * `E` - Example
            * `R` - Restore
            * `NW` - Not Working
        uses:
          type: array
          items:
            $ref: '#/components/schemas/CardInVariant'
          readOnly: true
        requires:
          type: array
          items:
            $ref: '#/components/schemas/TemplateInVariant'
          readOnly: true
        produces:
          type: array
          items:
            $ref: '#/components/schemas/FeatureProducedByVariant'
          readOnly: true
        of:
          type: array
          items:
            $ref: '#/components/schemas/Combo'
          readOnly: true
        includes:
          type: array
          items:
            $ref: '#/components/schemas/Combo'
          readOnly: true
        identity:
          allOf:
          - $ref: '#/components/schemas/IdentityEnum'
          title: Color identity
        mana_needed:
          type: string
          readOnly: true
        mana_value_needed:
          type: string
          readOnly: true
        other_prerequisites:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        popularity:
          type: integer
          readOnly: true
        spoiler:
          type: boolean
          title: Is spoiler
          description: Is this from an upcoming set?
        legalities:
          allOf:
          - $ref: '#/components/schemas/VariantLegalities'
          readOnly: true
        prices:
          allOf:
          - $ref: '#/components/schemas/VariantPrices'
          readOnly: true
      required:
      - description
      - id
      - includes
      - legalities
      - mana_needed
      - mana_value_needed
      - notes
      - of
      - other_prerequisites
      - popularity
      - prices
      - produces
      - requires
      - status
      - uses
    VariantAlias:
      type: object
      properties:
        id:
          type: string
          description: Unique id of this variant alias
          maxLength: 128
        variant:
          type: string
          description: Variant this alias redirects to
          nullable: true
          title: Redirects to
      required:
      - id
    VariantLegalities:
      type: object
      properties:
        commander:
          type: boolean
        pauper_commander_main:
          type: boolean
        pauper_commander:
          type: boolean
        oathbreaker:
          type: boolean
        predh:
          type: boolean
        brawl:
          type: boolean
        vintage:
          type: boolean
        legacy:
          type: boolean
        modern:
          type: boolean
        pioneer:
          type: boolean
        standard:
          type: boolean
        pauper:
          type: boolean
      required:
      - brawl
      - commander
      - legacy
      - modern
      - oathbreaker
      - pauper
      - pauper_commander
      - pauper_commander_main
      - pioneer
      - predh
      - standard
      - vintage
    VariantPrices:
      type: object
      properties:
        tcgplayer:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cardkingdom:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        cardmarket:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - cardkingdom
      - cardmarket
      - tcgplayer
    VariantStatusEnum:
      enum:
      - N
      - D
      - NR
      - OK
      - E
      - R
      - NW
      type: string
      description: |-
        * `N` - New
        * `D` - Draft
        * `NR` - Needs Review
        * `OK` - Ok
        * `E` - Example
        * `R` - Restore
        * `NW` - Not Working
    VariantSuggestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/VariantSuggestionStatusEnum'
          readOnly: true
          description: |-
            Suggestion status for editors

            * `N` - New
            * `NR` - Needs Review
            * `A` - Accepted
            * `R` - Rejected
        notes:
          type: string
          description: Notes written by editors
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
        uses:
          type: array
          items:
            $ref: '#/components/schemas/CardUsedInVariantSuggestion'
        requires:
          type: array
          items:
            $ref: '#/components/schemas/TemplateRequiredInVariantSuggestion'
        produces:
          type: array
          items:
            $ref: '#/components/schemas/FeatureProducedInVariantSuggestion'
        mana_needed:
          type: string
          description: Mana needed for this combo. Use the {1}{W}{U}{B}{R}{G}{B/P}...
            format.
          pattern: ^(?:(?:\{(?:C\/[WUBRG]|[WUBRG](?:\/P)?|[0-9CPXYZS\u221e]|[1-9][0-9]{1,2}|(?:2\/[WUBRG]|W\/U|W\/B|U\/B|U\/R|B\/R|B\/G|R\/G|R\/W|G\/W|G\/U)(?:\/P)?)\})[^\{\}\[\]]*)*$
          maxLength: 512
        other_prerequisites:
          type: string
          description: Other prerequisites for this combo.
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
        description:
          type: string
          description: Long description, in steps
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
        spoiler:
          type: boolean
          title: Is spoiler
          description: Is this combo a spoiler?
        comment:
          type: string
          description: Comment written by the user that suggested this combo
          pattern: ^(?:[^\[]*(?:\[(?!\[)|\[{2}[^\[]+\]{2}|\[{3,}))*[^\[]*$
          maxLength: 1024
        suggested_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - description
      - id
      - produces
      - requires
      - status
      - suggested_by
      - uses
    VariantSuggestionStatusEnum:
      enum:
      - N
      - NR
      - A
      - R
      type: string
      description: |-
        * `N` - New
        * `NR` - Needs Review
        * `A` - Accepted
        * `R` - Rejected
    WebsiteProperty:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        value:
          type: string
          description: Comma-separated list of values
          pattern: ^[^\,]+(?:\,[^\,]+)*$
          maxLength: 1000
      required:
      - key
    ZoneLocationsEnum:
      enum:
      - H
      - B
      - C
      - E
      - G
      - L
      type: string
      description: |-
        * `H` - Hand
        * `B` - Battlefield
        * `C` - Command Zone
        * `E` - Exile
        * `G` - Graveyard
        * `L` - Library
    error:
      type: object
      properties:
        error:
          type: string
      required:
      - error
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
